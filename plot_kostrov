#!/bin/bash
#
# plot Kostrov summation or stress inversion using bin_catalog
# thwbecker@post.harvard.edu
#
# this uses GMT6 syntax but assumes psxy --> gmt psxy type links have been set (see GMT documentation)
#
#
rcode=${1-0}			# 0: world (-1, -2, -3) 57: Tibet 19: Indonesia 6: Japan 2: SAM 97/97o/97o2/97book: Andes/Chile
                                # 98: Japan - 3 9: new zealand 99: Alaska 59: Anatolia 52: Banda small 27: Afar 32: western US -1: world cut for book 65: Colombia 35: Socal 111: all Cali
dmax=${2-50}			# maximum depth
plot_stress=${3-0}		# 1: plot Michael stress, 0: plot kostrov -1: plot strain-rates from GSRM 2: plot all CMTs 3: plot kostrov as strain crosses 4: plot stress as strain crosses, 999: skip, no deformation symbols
add_rlabel=${4-0}		# add a datestamp and email
gps_file=${5-0}		# add background velocities
use_tgradient=${6-1}		# 1: topo grad 0: topo -1: pscoast
add_fa=${7-0}			# add freeair
use_grayscale=${8-0}
add_boundary=${9-0}
add_profile=${10-""}		# add a profile and 
mom_file=${11-$datadir/cmt/all.momt}		# actual data file
is_aki=${12-0}			# aki format, or cmt?
use_scaled=${13-1}		# scaled or normalized Kostrov
add_slab_cont=${14-0}		# add slab contours?
add_pm=${15-0}			# add plate motions?
use_simpson=${16-0} 		# 0: plot mean normal strain 1: use Simpson style characterization
overlay_double_couple=${17-1}	# overlay the best fitting double couple style FM with -t30 transparency
dmin=${18--10}			# minimum depth
min_mag=${19-0}			# min magnitude
max_mag=${20-10}		# max magnitude
add_wsm=${21-0}			# add world stress map
force_inc=${22-"nan"}		# for increment for binning, else automatically detect
dist_based=${23-0}		# distance based 
tmpn=`mktemp`
trap "rm -f $tmpn*" EXIT

slab_cmp=lajolla
slab_col_add=""
slab_cont_type=-W1
pv_vec_size=0.1/0.18/0.1

pv_vec_scale=5
vel_label_loc="-55 -45"
#
# make a  Kostrov summation
#
if [ `echo $mom_file | gawk '{if(match($1,"all.momt"))print(1);else print(0)}'` -eq 1 ];then
    read cmt_date < $datadir/cmt/last_month_cmt.dat
    is_gcmt=1
    cat_string="globalcmt.org as of $cmt_date"
else
    cat_string=`echo $mom_file | gawk '{gsub(".aki","");printf("%s",$1)}'`
    is_gcmt=0
fi

#
# select region and projection parameters
#
if [ $rcode = -3 ];then
    wcut=3
    rcode=0
elif [ $rcode = -2 ];then
    wcut=2
    rcode=0
elif [ $rcode = -1 ];then
    wcut=1
    rcode=0
else
    wcut=0
fi
if [[ $rcode = "97o" || $rcode = "97o2" || $rcode = "97book" ]];then
    rcode_code=97
else
    rcode_code=$rcode
fi

region_parameters $rcode_code 8 > $tmpn.$$
read w e s n < $tmpn.$$; rm $tmpn.$$
reg=-R$w/$e/$s/$n

strain_cross_col=darkblue

pb_col=darkorange
pb_w=1

# defaults, will be overridden below
preg=$reg
greg=$reg
cmt_size=0.12
#
# automatically determine geographic parameters from region codes
#
kinc=`region_parameters $rcode_code  5`
proj=`region_parameters $rcode_code 4`
ann=`region_parameters $rcode_code 6`
name=`region_parameters $rcode_code 7`

add_faults=xxx
zslab_max=700
add_jap_le=0			# large, recent events for japan
if [ $add_rlabel -eq 1 ];then
    pscl=-Dx7.5/-0.1/3/.15h
else
    pscl=-Dx6.5/-0.1/3/.15h
fi
pscl_simpson=-Dx12.5/5.5/3/.2
# for seismicity label
pscl_slab1=0.5/-0.1/2.5/.15h
pscl_slab2=3.5/1/2.5/.15h

# ref frame for plate motions, if used
rframe=sa
#rframe=7
vinc=-I2.5

if [ $rcode = 0 ];then
    if [ $wcut -eq 2 ];then	# make it look like the GSRM plots
	#proj=-JN130/13
	#proj=-JKf130/13	
	pscl=-Dx3/-.1/3/.1h
	proj=-JKf160/7
	preg=-R0/360/-65/80
	#kinc=3.5;	cmt_size=0.14
	kinc=7.5;	cmt_size=0.15
	ann=-Bg90
	name=WLDC2
    elif [ $wcut -eq 3 ];then
	#proj=-JN130/13
	proj=-JKf130/36
	kinc=0.5
	cmt_size=0.05
	ann=-Bg60
	name=WLDF
    elif [ $wcut -eq 0 ];then
	#proj=-JN130/13
	proj=-JKf130/13	
	#kinc=3.5;	cmt_size=0.14
	kinc=7.5;	cmt_size=0.25
	ann=-Bg60

    else
	pscl=-Dx3/-.1/3/.1h 
	name=WLDC
	w=0;e=360;s=-65;n=80
	greg=-R$w/$e/$s/$n
	reg=$greg
	preg=$greg
	proj=-JKf160/7
	kinc=3.5
	ann=-Bg90
	cmt_size=0.08
    fi
elif [ $rcode = 27 ];then
    ann=-Ba5f.5WesN
    proj=-JM13
    cmt_size=0.14
    kinc=0.5
    #kinc=1
    cmt_size=0.2
elif [ $rcode = 32 ];then
    ann=-Ba2f.2WesN
    proj=-JM13
    cmt_size=0.14
    kinc=0.25
    #kinc=1
    cmt_size=0.2
elif [ $rcode = 35 ];then	# socal
    ann=-Ba1f.1WesN
    proj=-JM13
    kinc=0.2
    #kinc=1
    if [ $plot_stress = 0 ];then
	cmt_size=0.5
    else
	cmt_size=0.2
    fi
    rframe=31
    vinc=-I2
elif [ $rcode = 111 ];then	# allcal
    ann=-Ba2f.2WesN
    proj=-JM13
    #kinc=0.2
    #kinc=0.1
    kinc=0.05
    if [ $plot_stress = 0 ];then
	cmt_size=0.5
    else
	cmt_size=0.2
    fi
    rframe=31
    vinc=-I2
elif [ $rcode -eq 44 ];then
	proj=-JB`echo $reg | gawk -f reg2midlon.awk`/`echo $reg | gawk -f reg2midlat.awk`/`echo $reg | gawk -v frac=0.33 -f reg2midlat.awk`/`echo $reg | gawk -v frac=0.66 -f reg2midlat.awk`/13
	kinc=3;	cmt_size=0.25
	ann=-Bg60
	vinc=-I15
	pv_vec_scale=10
	vel_label_loc="-105 -55"
elif [ $rcode = 97 ];then
    
    #proj=-JH`echo $reg | gawk -f reg2midlon.awk`/13
    proj=-JB`echo $reg | gawk -f reg2midlon.awk`/`echo $reg | gawk -f reg2midlat.awk`/`echo $reg | gawk -v frac=0.33 -f reg2midlat.awk`/`echo $reg | gawk -v frac=0.66 -f reg2midlat.awk`/13
    #kinc=1
    kinc=1
    ann=-Ba10f1WesN
    cmt_size=0.4
    rframe=44
    vinc=-I9
elif [ $rcode = "97book" ];then
    preg=-R277/300/-50/14
    proj=-JB`echo $reg | gawk -f reg2midlon.awk`/`echo $reg | gawk -f reg2midlat.awk`/`echo $reg | gawk -v frac=0.33 -f reg2midlat.awk`/`echo $reg | gawk -v frac=0.66 -f reg2midlat.awk`/7
    #kinc=1
    kinc=1
    slab_cont_type=-W3
    ann=-Ba10f1WesN
    cmt_size=0.3
    rframe=44
    vinc=-I8
    pv_vec_size="-Q0.2/0.36/0.2n.1 -t30"
    slab_cmp="lajolla -I"
    slab_col_add="-F+gwhite -t20"
    pscl_slab2=5/13/2.5/.2
    name=$name"book"
    pscl=-Dx3.5/-0.1/3/.15h
elif [[ $rcode = "97o" || $rcode = "97o2" ]];then	# Andes Oblieuqe Merc, or with focus on Chile
    vinc=-I9
    if [ $rcode = "97o" ];then
	preg=-R-40/35/-13/10
	name=$name"o"
	ann="-Ba10g20f1WesN -Tdg-55/-45+w1i+l,,,N"
	cmts2=0.25
    else
	preg=-R-10/35/-13/5
	name=$name"o2"
	ann="-Ba5g10f1WesN -Tdg-60/-45+w1i+l,,,N"
	pscl_slab1=2/.5/2.5/.15h
	cmts2=0.35
    fi
    proj=-JOa-70/-20/166/15
    pscl_simpson=-Dx15.5/2.5/3/.2

    kinc=1
    #kinc=2
    if [ $use_scaled -eq 1 ];then
	cmt_size=0.2
    else
	cmt_size=$cmts2
	#cmt_size=0.4
    fi
    rframe=44
    w=-95;e=-40;s=-60;n=50
    greg=-R$w/$e/$s/$n
elif [ $rcode = 6 ];then
    proj=-JB`echo $preg | gawk -f reg2midlon.awk`/`echo $preg | gawk -f reg2midlat.awk`/`echo $preg | gawk -v frac=0.33 -f reg2midlat.awk`/`echo $preg | gawk -v frac=0.66 -f reg2midlat.awk`/13
    #proj=-JH`echo $preg | gawk -f reg2midlon.awk`/13
    kinc=0.5
    ann=-Ba5f.5WesN
    cmt_size=0.2
elif [ $rcode = 19 ];then
    #proj=-JB`echo $preg | gawk -f reg2midlon.awk`/`echo $preg | gawk -f reg2midlat.awk`/`echo $preg | gawk -v frac=0.33 -f reg2midlat.awk`/`echo $preg | gawk -v frac=0.66 -f reg2midlat.awk`/13
    proj=-JM13
    kinc=1
    ann=-Ba5f.5WesN
    cmt_size=0.2
elif [ $rcode = 57 ];then
    proj=-JB`echo $preg | gawk -f reg2midlon.awk`/`echo $preg | gawk -f reg2midlat.awk`/`echo $preg | gawk -v frac=0.33 -f reg2midlat.awk`/`echo $preg | gawk -v frac=0.66 -f reg2midlat.awk`/13
    kinc=1
    ann=-Ba5f.5WesN
    cmt_size=0.225
elif [ $rcode = 59 ];then
    proj=-JB`echo $preg | gawk -f reg2midlon.awk`/`echo $preg | gawk -f reg2midlat.awk`/`echo $preg | gawk -v frac=0.33 -f reg2midlat.awk`/`echo $preg | gawk -v frac=0.66 -f reg2midlat.awk`/13
    kinc=0.5
    ann=-Ba2f.2WesN
    cmt_size=0.2
    add_faults=$datadir/faults/medfaults_new.gmt
elif [ $rcode = 52 ];then
    proj=-JB`echo $preg | gawk -f reg2midlon.awk`/`echo $preg | gawk -f reg2midlat.awk`/`echo $preg | gawk -v frac=0.33 -f reg2midlat.awk`/`echo $preg | gawk -v frac=0.66 -f reg2midlat.awk`/13
    kinc=0.25
    ann=-Ba2f.2WesN
    cmt_size=0.2
elif [ $rcode = 98 ];then
    proj=-JM7
    kinc=1
    ann=-Ba10f1WesN
    cmt_size=0.2
elif [ $rcode = 99 ];then
    proj=-JS`echo $preg | gawk -f reg2midlon.awk`/90/90/7
    kinc=1
    ann=-Ba10f1g1WesN
    cmt_size=0.2
elif [ $rcode = 100 ];then	# northern Cali
    proj=-JM13
    #proj=-JH`echo $preg | gawk -f reg2midlon.awk`/13
    preg=-R-126/-120/39/42
    kinc=0.25
    ann=-Ba1f.1WesN
    cmt_size=0.4
elif [ $rcode = 9 ];then	# NZL
    
    #cmt_size=0.275
    
    kinc=0.5
    omerc=0
    if [ $omerc = 1 ];then
	cmt_size=0.3
	w=159;e=220;s=-55;n=-30
	greg=-R$w/$e/$s/$n
	reg=$greg			# for binning
	proj=-JOa171/-43/40/13
	ann="-Ba2f.5g10WesN -Tdg-70/-20+w1i+f+l,,,N"
	preg=-R-7/11/-4/4.5
    else
	w=162;e=180;s=-48;n=-33
	greg=-R$w/$e/$s/$n
	reg=$greg			# for binning
	cmt_size=0.5
	proj=-JM10
	#preg=$greg
	preg=-R165.5/175.5/-47.5/-39.5
	ann="-Ba1f.5WesN"
	pscl_slab2=.5/7/4/.15

    fi
    pb_w=2
    zslab_max=350
elif [ $rcode = 103 ];then
    add_jap_le=1
    cmt_size=0.3
    kinc=0.5
    proj=-JM13
    pb_w=2
elif [ $rcode = 107 ];then
    proj=-JM13
    kinc=0.5
    ann=-Ba.5f.1WesN
    cmt_size=1
elif [ $rcode = 110 ];then
    kinc=1.5
    cmt_size=.1
    pscl=-Dx4.5/-.1/3/.1h
fi

if [ $force_inc = "nan" ];then
    echo $0: using region determined increment of $kinc for binning for x
else
    kinc=$force_inc
    echo $0: overriding regional binning with  $kinc for x
fi

kincy=$kinc
if [ $rcode = 99 ];then
    ((kincx=kinc*2))
    ann="-Ba10f1g"$kincx"/a10f1g"$kincy"WesN"
else
    kincx=$kinc
fi

if [ $use_scaled -eq 1 ];then
    ktype=scaled
else
    ktype=norm
fi

if [ $dmin = -10 ];then
    if [ $dist_based -eq 1 ];then
	sname=nbased
	soname=nkmom
    else
	sname=kostrov
	soname=kmom
    fi
else
    if [ $dist_based -eq 1 ];then
	soname="nkmom_b"$dmin
	sname="nbased_b"$dmin
    else
	soname="kmom_b"$dmin
	sname="kostrov_b"$dmin
    fi
fi
echo $0:  $rcode $reg $preg $name $proj dx $kincx dy $kincy > /dev/stderr
#exit
if [ ! -s $sname.$kincx.$kincy.$name.0.norm.dat ];then
    nmin_for_stress=5
    if [ $dist_based -eq 1 ];then # optional, by distance
	dy_km=`echo $kincy | gawk '{printf("%.1f",$1*111.19492664/1.5)}'` # distance in km sort of
	#dy_km2=`echo $dy_km | gawk '{print($1*2)}'`
	dweight=1
	dist_max=$dy_km
	nsample_catalog  $mom_file $kincx $min_mag $max_mag \
			 $w $e $s $n $dmax $is_aki $dweight $nmin_for_stress $dist_max $dmin 0 $sname $kincy
    else			# default, by bin
	bin_catalog $mom_file $kincx $min_mag $max_mag 0 $w $e $s $n $dmax $is_aki 0 $dmin 0 $sname $kincy $nmin_for_stress
    fi
    #
    for t in norm scaled;do	# Kostrov summations
	if [ ! -s $sname.$kincx.$kincy.0.$t.dat ];then
	    echo $0: bin_catalog did not produce $sname.$kincx.$kincy.0.$t.dat
	    exit
	fi
	mv $sname.$kincx.$kincy.0.$t.dat $sname.$kincx.$kincy.$name.0.$t.dat 
	echo $0: renamed Kostrov $t output to $sname.$kincx.$kincy.$name.0.$t.dat 
    done
    for t in s bs ds smn;do		# stress inversion output
	if [  -s $sname.$kincx.$kincy.$t.dat  ];then
	    mv $sname.$kincx.$kincy.$t.dat $sname.$kincx.$kincy.$name.$t.dat
	    echo $0: renamed stress $t type output to $sname.$kincx.$kincy.$name.$t.dat
	fi
    done
else
    echo $0: WARNING: reusing old files $sname.$kincx.$kincy.$name.0.norm.dat and similar
fi


if [ $plot_stress -eq 999 ];then
    ofile_start=$soname.$name.none
elif [ $plot_stress -eq 4 ];then
    ofile_start=$soname.$name.sh.stress
elif [ $plot_stress -eq 3 ];then
    ofile_start=$soname.$name.eh
elif [ $plot_stress -eq 2 ];then
    ofile_start=$soname.$name.cmt
elif [ $plot_stress -eq 1 ];then
    ofile_start=$soname.$name.stress
elif [ $plot_stress -eq 0 ];then
    ofile_start=$soname.$name
elif [ $plot_stress -eq -1 ];then
    ofile_start=$soname.$name.gsrm
else
    echo $0: error $plot_stress
    exit
fi
if [ $is_gcmt = 0 ];then
    ofile_start=$ofile_start.$cat_string
fi

spc=0.25
if [ $use_simpson -eq 1 ];then
    #makecpt -D -T0/3/0.5 -Z -Croma -I > tmp1
    makecpt -D -T0/3/0.25  -Croma -I > tmp1
    #makecpt -D -T0/3/0.5  -Cseis -I > tmp1
    cmp=simpson.cpt
    cat <<EOF > tmp2
;radial extension
;
;normal
;
;normal/strike-slip
;
;strike-slip
;
;strike-slip/reverse
;
;reverse
;;constriction
EOF
    paste tmp1 tmp2 > simpson.cpt
    rm tmp1 tmp2
else
    #makecpt -D -T-.4/.4/0.04 -Cseis > def.cpt
    #makecpt -D -T-.5/.5/0.05 -I -Crainbow > def.cpt
    #makecpt -D -T-.4/.4/0.04 -I -Ctemperature > def.cpt
    makecpt -D -T-.4/.4/0.04  -Croma > def.cpt
    #makecpt -T-.4/.4/0.04 -Chaxby > def.cpt
    cmp=def.cpt

fi

ofile=$ofile_start.ps

#
# topo files
#

if [[ $rcode = 0 ]];then
    tfile=$datadir/etopo1/etopo1.bed.0.125.grd
elif [[  $rcode = 44 ]];then
    tfile=$datadir/etopo1/ETOPO1_Bed_g_gmt4.grd
else
    if [ -s $datadir/srtm15+/srtm15+.nc ];then
	tfile=$datadir/srtm15+/srtm15+.nc 
    else
	tfile=$datadir/etopo1/ETOPO1_Bed_g_gmt4.grd
    fi
fi

if [ -s $tfile ];then
    
    if [ $rcode = 0 ];then
	#makecpt -T-7000/2000/500 -Cgray > $tmpn.cpt
	makecpt -T-7000/7000/500 -Coleron > $tmpn.cpt
	topo_grid=$tfile
    else
	if [ $use_tgradient -ne -1 ];then
	    echo $0: using $tfile
	    echo $greg
	    grdcut -fg $greg $tfile -G$tmpn.topo.grd
	    topo_grid=$tmpn.topo.grd
	    if [ $use_grayscale -eq 1 ];then
		grd2cpt   -CgrayC  $topo_grid > $tmpn.cpt
		#grd2cpt  -E51 -Coleron+h0 $topo_grid > $tmpn.cpt
	    else
		makecpt -T-7000/7000/500 -Coleron > $tmpn.cpt
	    fi
	fi
    fi
    have_topo=1
else
    echo $0: topo file $tfile not found
    have_topo=0
fi
#showcpt tmp 1000 "topo"; gv t.eps ; exit

#grd2cpt -E21  $tfile -Cgray > $tmpn.cpt
#grd2cpt  -E21 -Cocean $tfile > $tmpn.cpt

if [ $have_topo -eq 1 ];then
    if [ $use_tgradient -eq 1 ];then
	grdgradient -Nt -A30 $topo_grid -G$tmpn.grd
	grdimage -fg $preg $proj  $topo_grid -C$tmpn.cpt -I$tmpn.grd  -P -K > $ofile
    elif [ $use_tgradient -eq 0 ];then
	grdimage -fg $preg $proj  $topo_grid -C$tmpn.cpt  -P -K > $ofile
    else
	pscoast  $preg $proj -Di -A5000 -S120 -G150 -W0.25  -P -K > $ofile
    fi
else
    pscoast $preg $proj -Dh -A5000 -S200 -G220 -W0.25  -P -K > $ofile
fi
if [ $add_fa = 1 ];then
    grdcontour $datadir/dyn_topo/gfreeairtopo.grd -fg $preg $proj -C0.1  -O -K >> $ofile
fi
#if [[ $rcode = 19 || $rcode = 6 || $rcode = 9 ]];then
pscoast $preg $proj -Df -A5000  -W.25  -O -K >> $ofile
if [ $add_pm -eq  1 ];then

    pmodel=$datadir/plates/morvel;pm_inc=0.25
    grdvector $pmodel.vx.$pm_inc.$rframe.grd  \
	      $pmodel.vy.$pm_inc.$rframe.grd  $preg $proj -T -O -K \
	      -S$pv_vec_scale -fg  $vinc "-Q"$pv_vec_size"n.25" -Ggray >> $ofile
    echo $vel_label_loc  0 5 0 0 0 "5 cm/yr" | \
	psvelo $preg $proj -Se`echo $pv_vec_scale | gawk '{print(1/$1)}'`/0/20 -O -K -A$pv_vec_size -Gblack  -N  >> $ofile

fi

if [ $add_slab_cont -eq 1 ];then

    
    if [ $zslab_max = 700 ];then
	slab_col_ends=""
	zslspc=200
	makecpt -T0/$zslab_max/100 -C$slab_cmp  > $tmpn.z.cpt
    else
	slab_col_ends="-Ef"
	zslspc=100
	makecpt -T0/$zslab_max/20 -C$slab_cmp  > $tmpn.z.cpt
    fi
    psxy $preg $proj -fg -m $datadir/slab_contours/slab2/all.40spaced.dcont $slab_cont_type  \
	 -C$tmpn.z.cpt -O -K -t40 >> $ofile
    if [ $use_simpson -eq 1 ];then
	psscale -Dx$pscl_slab1 $slab_col_ends $slab_col_add \
		-C$tmpn.z.cpt  -B$zslspc/:"z@-slab@- [km]":  -O -K  >> $ofile
    else
	psscale -Dx$pscl_slab2 $slab_col_ends $slab_col_add  \
		-C$tmpn.z.cpt  -B$zslspc/:"z@-slab@- [km]":  -O -K  >> $ofile

    fi
fi
if [ $add_wsm = 1 ];then
    # Add WSM data points
    pquality=3			# quality
    type_string="t1=0 t2=1 t3=1 t4=1 t5=1 t6=1 t7=0" # 
    #type_string="t1=0 t2=1 t3=1 t4=1 t5=1 t6=0 t7=0" # wo focal mech 
    wsm_vec=-SVB0.02/0.01/0.01
    sfac=0.1
    wsm_data=$datadir/wsm/WSM_Database_2025.csv

    # undetermined
    gawk -f sortwsm.awk pregime=4 pquality=$pquality  $type_string  $wsm_data | \
	gawk '{printf("%g %g %g %g\n",$1,$2,$5,f);}' f=$sfac  | \
	psxy  $preg $proj $wsm_vec  -Gwhite -O -K >> $ofile

    # extensional (maybe with some strike slip component)
    gawk -f sortwsm.awk pregime=1 pquality=$pquality  $type_string  $wsm_data | \
	gawk '{printf("%g %g %g %g\n",$1,$2,$5,f);}' f=$sfac | \
	psxy  $preg $proj $wsm_vec  -Gblue -O -K >> $ofile

    # strike slip
    gawk -f sortwsm.awk pregime=2 pquality=$pquality  $type_string  $wsm_data | \
	gawk '{printf("%g %g %g %g\n",$1,$2,$5,f);}' f=$sfac | \
	psxy  $preg $proj $wsm_vec  -Glightgreen -O -K >> $ofile
    
    # compressional (with strike-slip)
    gawk -f sortwsm.awk pregime=3 pquality=$pquality  $type_string  $wsm_data | \
	gawk '{printf("%g %g %g %g\n",$1,$2,$5,f);}' f=$sfac | \
	psxy  $preg $proj $wsm_vec  -Gred -O -K >> $ofile
    

fi
if [ -s $gps_file ];then
    echo $0: plotting $gps_file
    #gpsscale=.02
    gpsscale=.02
    gps_vec="-L0.25  -A0.04/0.1/0.05"
    psvelo $preg $proj $gps_file -O -K -Se$gpsscale/-1/0   \
	   $gps_vec -Gblack -W0.25,gray >> $ofile
	    #    echo 70 17 50 0 0 0 0 "5 cm/yr" | \
		echo 116.5 40 0 50 0 0 0 "5 cm/yr" | \
		    psvelo $preg $proj -N -O -K -Se$gpsscale/-1/20   \
			   $gps_vec  >> $ofile
		
fi
if [ -s $add_profile.dat ];then
    read plon plat pazi pl1 pl2  < $add_profile.dat
    project -C$plon/$plat -A$pazi -L$pl1/$pl2 -G1 -Q  | \
	psxy -fg $preg $proj -W3,orange -O -K >> $ofile
    if [ -s $gps_file ];then
	gawk '{print($1,$2,$3,$4)}' $gps_file | \
	    project -C$plon/$plat -A$pazi -L$pl1/$pl2  -W-100/100 -Q | \
	    # lon lat vx vy L
	    gawk '{print($1,$2,$3,$4,$5)}' | sort -g +4 > $add_profile.vel.dat

	gawk '{print($1,$2,$3,1/$5)}' $gps_file | blockmean $preg -Wi -I0.5 -fg > $tmpn.1
	gawk '{print($1,$2,$4,1/$6)}' $gps_file | blockmean $preg -Wi -I0.5 -fg > $tmpn.2
	for i in 1 2;do
	    surface $tmpn.$i $preg -I0.1 \
		    `echo $preg | gawk -f reg2aspect.awk` \
		    -T0 -fg -G$tmpn.$i.grd
	    # lon lat L vel
	    project -C$plon/$plat -A$pazi -L$pl1/$pl2 -G1 -Q  | grdtrack -fg -G$tmpn.$i.grd > $tmpn.$i.e
	done
	paste $tmpn.1.e $tmpn.2.e | head
	paste $tmpn.1.e $tmpn.2.e | gawk '{print($1,$2,$4,$8,$3)}' > $add_profile.svel.dat
	rm $tmpn.[1-2].e $tmpn.[1-2] $tmpn.[1-2].grd
    fi

fi
if [ $plot_stress -ne 999 ];then
    
    if [[ $plot_stress -eq 1 || $plot_stress -eq 4 ]];then
	kfile=$sname.$kincx.$kincy.$name.s.dat
	label="@~s@~@-h@-"
	lname="Michael (1984) stress"
    elif [[ $plot_stress -eq 0 || $plot_stress = 2 || $plot_stress = 3 ]];then
	kfile=$sname.$kincx.$kincy.$name.0.$ktype.dat
	label="@~e@~@-h@-"
	if [ $use_scaled -eq 1 ];then
	    lname="Kostrov, scaled"
	else
	    lname="Kostrov, normalized"
	fi
    elif [ $plot_stress -eq -1 ];then
	kfile=$tmpn.kos
	#
	# lon lat exx eyy exy format
	# convert to:
	# err ert erp ett etp epp lon lat N dev 
	#gawk '{s=1e2;err=-($3+$4);print(err*s,0,0,$4*s,-$5*s,$3*s,$1,$2,"NaN","NaN")}' \
	    #$datadir/gsrm/kreemer_new/strain.1.dat > $tmpn.kos
	
	gawk '{s=1e2;err=-($3+$4);print(err*s,0,0,$4*s,-$5*s,$3*s,$1,$2,"NaN","NaN")}' \
	     $datadir/gsrm/kreemer_new/gps/strain.GPS_ITRF08.dat > $tmpn.kos
	
	
	
	label="d@-t@-@~e@~@-h@-"
	lname="GSRM"
    fi
    if [ ! -s $kfile ];then
	echo $0: $kfile not found
	exit
    fi
else
    # volcanoes
    gawk  'BEGIN{FS=";"}{if(NR>2 && NF>=9)print($9,$8)}' \
	  $datadir/volcanoes/GVP_Volcano_List.csv  | \
	psxy  $proj $preg -Gyellow -St0.25 -W0.5 -O -K -t20 >> $ofile
    # flat slab
    fscol=cyan
    cat <<EOF | psxy $proj $preg -W12,$fscol -K -O -t50 >> $ofile
-79 -3.5
-74.5 -13.5
EOF
    echo -65 -10 30 0 31 CM "flat slab" | pstext -F+f$fscol   -O -K $preg $proj >> $ofile
    cat <<EOF | psxy -SV0.05/0.1/0.1 $preg $proj -G$fscol -O -K -N -t30 >> $ofile
-68 -9.5  342 4.2
-68 -10  280 2
-68 -10.5  180 5
EOF
    echo -73 7 | psxy $proj $preg -Sc0.75 -G$fscol -O -K -t50 >> $ofile
    echo  -68 -30.5 | psxy $proj $preg -Sc0.9 -G$fscol -O -K -t50 >> $ofile    
fi
if [ $add_boundary -eq 1 ];then    
    psxy $datadir/plate_boundaries/bird_PB2002/PB2002_tdiddy.gmt  -m  \
	 $preg  $proj  -O -K   -W$pb_w,$pb_col  >> $ofile
elif [ $add_boundary -eq 2 ];then    
    psxy  ~/data/plate_boundaries/nuvel_without_greenwich_crossing.yx  -m  -:  \
	 $preg  $proj  -O -K   -W$pb_w,$pb_col  >> $ofile
fi
if [ -s $add_faults ];then
    psxy $preg $proj $add_faults -m -O -K -W0.5,darkorange >> $ofile

fi
if [ $use_simpson -eq 1 ];then
    # compute eigen system 
    #   1                                  5                                9 
    # eval_3 evec_3^1 evec_3^2 evec_3^3 eval_2 evec_2^1 evec_2^2 evec_2^3 eval_1 evec_1^1 evec_1^2 evec_1^3
    #
    gawk '{print($1,$2,$3,$4,$5,$6)}' $kfile | eigen3ds > $tmpn.eigen
    # determine state
    # n=0 normal n=1 strike slip n=2 thrust
    gawk '{s1r=$10;s2r=$6;s3r=$2;
          if(s1r>s2r){
	       if(s3r>s1r)
	          n=3;
	        else n=1;
	   }else{
	    if(s3r>s2r)
	      n=3;
	     else 
	      n=2;}
	    print(3-n)}' $tmpn.eigen > $tmpn.n
    minmax $tmpn.n
    
    paste $tmpn.eigen $tmpn.n | gawk '{s1=$9;s2=$5;s3=$1;n=$13;phi = (s1-s2)/(s1-s3);
	   print((n+0.5) + (-1)**n * (phi-0.5))}'  > $tmpn.simpson

fi
if [ $plot_stress -ne 999 ];then
    # compute norm 
    gawk '{print($1,$4,$6,$2,$3,$5)}' $kfile | gawk -f normrow.awk > $tmpn.norm
    minmax $tmpn.norm
fi

if [ $plot_stress -eq 2 ];then	# all CMTs
    gmtselect $reg -fg all.mdat_mwdt | \
	gawk -v d=$dmax '{if($3<=d)print($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,substr($13,1,3))}' > $tmpn.dat
    if [ $use_simpson -eq 1 ];then
	paste $tmpn.dat $tmpn.simpson | sort -gr +12 | \
	    gawk '{print($1,$2,$14,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13)}' > $tmpn.plot
	psmeca $tmpn.plot $preg $proj  -L0.25 -W0.25 -D-1e5/1e5  -Csimpson.cpt  \
	       -Sm`echo $cmt_size`/-1  -O -K  >> $ofile
	rm $tmpn.norm
    else
	gawk '{print($4,$7,$8,$5,$9,$6)}' $tmpn.dat | gawk -f tensornorm.awk > $tmpn.norm
	paste $tmpn.dat $tmpn.norm | sort -gr +12 | \
	    gawk '{print($1,$2,($5+$6)/2/$14,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13)}' > $tmpn.plot
	psmeca $tmpn.plot $preg $proj  -L0.25 -W0.25 -D-1e5/1e5  -C$cpt  \
	       -Sm`echo $cmt_size`/-1  -O -K  >> $ofile
	rm $tmpn.norm
    fi
    if [ $overlay_double_couple -eq 1 ];then
	psmeca $tmpn.plot $preg $proj  -L0.25 -W0.25 -D-1e5/1e5   \
	       -t30 -Sd`echo $cmt_size`/-1  -O -K -T0 >> $ofile
    fi
    rm $tmpn.dat 
    
elif [[ $plot_stress -eq 1 || $plot_stress = 4 ]];then
    if [ $use_simpson -eq 1 ];then
	paste $kfile $tmpn.simpson | sort -n +15 | \
	    gawk '{s=sqrt(0.2/(1e-3+$16));print($7,$8,$17,$1*s,$4*s,$6*s,$2*s,$3*s,$5*s,1,$7,$8)}' > $tmpn.dat

    else
	gawk '{print($1,$2,$3,$4,$5,$6)}' $kfile | gawk -f tensornorm.awk  > $tmpn.norm # almost unity/not necessary
	#
	# scale stress by 1/uncertainty
	#
	# psmeca wants:                            mrr mtt mff mrt mrf mtf exp [newX newY] [event_title]
	# conversion to psmca: my tensor elements: 1,   4,  6, 2,   3,  5
	#
	# my output is:  mrr,  mrt, mrf, mtt,  mtf, mff (spherical)
	#
	# this would be: mzz, -myz, mxz, myy, -mxy, mxx
	#                muu, -mnu, meu, mnn, -men, mee
	#
	paste $kfile $tmpn.norm | sort -n +15 | \
	    gawk '{s=sqrt(0.2/(1e-3+$16));print($7,$8,($4+$6)/2/$17,$1*s,$4*s,$6*s,$2*s,$3*s,$5*s,1,$7,$8)}' > $tmpn.dat
    fi
    if [ $plot_stress = 4 ];then # horizontal stress tensor only
	# convert to psvelo format 
	# x: Strain crosses: in X,Y,Eps1,Eps2,Theta.n1-CW from N to E2
	#
	gawk '{print($6,-$9,$5)}' $tmpn.dat | gawk -f calcms.awk > $tmpn.s1s2azi
	gawk '{print($1,$2)}' $tmpn.dat > $tmpn.lonlat
	paste $tmpn.lonlat $tmpn.s1s2azi | gawk '{print($1,$2,$3,$4,$5+90)}' > \
						$sname.$kincx.$kincy.$name.sh.stress.dat
	psvelo $sname.$kincx.$kincy.$name.sh.stress.dat -A0.05/0.15/0.15 \
	       $preg $proj  -Sx$cmt_size -O -K  -W1,$strain_cross_col >> $ofile
    else			# stress tensor as CMT symbol
	psmeca $tmpn.dat $preg $proj  -L0.25 -W0.25 -D-1e5/1e5  -C$cmp \
	       -Sm`echo $cmt_size`+f0+l+s10  -O -K  >> $ofile
	if [ $overlay_double_couple -eq 1 ];then
	    psmeca $tmpn.dat $preg $proj  -L0.25 -W0.25 -D-1e5/1e5   \
		   -t30 -Sd`echo $cmt_size`+f0+l+s10  -O -K -T0 >> $ofile
	fi
    fi

elif [ $plot_stress -ne 999 ];then
    if [ $use_simpson -eq 1 ];then
	if [ $ktype = scaled ];then
	    paste $kfile $tmpn.simpson | \
		gawk '{print($7,$8,$11,  $1,$4,$6,$2,$3,$5,   22,$7,$8)}'  > $tmpn.dat
	else
	    paste $kfile $tmpn.simpson | \
		gawk '{print($7,$8,$12,  $1,$4,$6,$2,$3,$5,   22,$7,$8)}'  > $tmpn.dat
	fi
    else
	#echo ok1
	if [ $ktype = scaled ];then
	    paste $kfile $tmpn.norm | gawk '{print(($4+$6)/2/$11)}' | minmax
	    paste $kfile $tmpn.norm | \
		gawk '{print($7,$8,($4+$6)/2/$11,  $1,$4,$6,$2,$3,$5,   22,$7,$8)}'  > $tmpn.dat
	else
	    paste $kfile $tmpn.norm | \
		gawk '{print(($4+$6)/2/$12)}' | minmax
	    paste $kfile $tmpn.norm | \
		gawk '{print($7,$8,($4+$6)/2/$12,  $1,$4,$6,$2,$3,$5,   22,$7,$8)}'  > $tmpn.dat
	fi
    fi
    #echo ok2
    if [ $plot_stress = 3 ];then
	# convert to psvelo format 
	# x: Strain crosses: in X,Y,Eps1,Eps2,Theta.n1-CW from N to E2
	#
	gawk '{print($6,-$9,$5)}' $tmpn.dat | gawk -f calcms.awk > $tmpn.e1e2azi
	gawk '{print($1,$2)}' $tmpn.dat > $tmpn.lonlat
	paste $tmpn.lonlat $tmpn.e1e2azi | gawk '{print($1,$2,$3,$4,$5+90)}' > $sname.$kincx.$kincy.$name.eh.dat
	#psvelo $sname.$kincx.$kincy.$name.eh.dat -A0.1/0.2/0.2    $preg $proj  -Sx$cmt_size -O -K  -W2 >> $ofile
	echo 
	echo  $sname.$kincx.$kincy.$name.eh.dat
	echo 
	psvelo $sname.$kincx.$kincy.$name.eh.dat -A0.05/0.1/0.1    $preg $proj  -Sx$cmt_size -O -K  -W1,$strain_cross_col >> $ofile
	#gawk '{azi=$5;if(azi>180)azi-=180;printf("%g %g 8 0 29 CM %.1f\n",$1,$2,azi)}' $sname.$kincx.$kincy.$name.eh.dat | \
	    #pstext $preg $proj -O -K -Gwhite >> $ofile
    else
	minmax $tmpn.dat
	# 	m: Seismic (full) moment tensor:
	#           X Y depth mrr mtt mff mrt mrf mtf exp [newX newY] [event_title].
	psmeca $tmpn.dat $preg $proj  -L0.25 -W0.25 -D-1e5/1e5  -C$cmp \
	       -Sm`echo $cmt_size`/-1  -O -K  >> $ofile
	if [ $overlay_double_couple -eq 1 ];then
	    psmeca $tmpn.dat $preg $proj  -L0.25 -W0.25 -D-1e5/1e5   \
		   -t30 -Sd`echo $cmt_size`/-1  -O -K -T0 >> $ofile
	fi
    fi
fi

#echo ok3
#psxy $datadir/plate_boundaries/bird_PB2002/PB2002_tdiddy.gmt  -m  \
    #     $preg  $proj  -O -K   -W2,$pb_col  >> $ofile

if [ $add_jap_le -eq 1 ];then
    gmtselect $preg -fg all.mdat_mwdt | \
	gawk '{split($13,l,"-");mw=l[1];year=l[2];if((mw>6.5)&&(year>1994)&&($3<50)){label=sprintf("%i-M@-w@-%.1f",year,mw);print($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,label)}}' |  sort -gr +1 | \
	gawk '{if($1>132){i++;xl=138-i*1.2;yl=36.5;}else{j++;xl=125.5;yl=37-j/1.25};print($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,xl,yl,$13)}' | \
	psmeca  $preg $proj  -L0.25 -W0.25 -D-1e5/1e5 -Sm`echo $cmt_size`/14  -A+p2 -O -K  >> $ofile
fi
if [ $plot_stress -ne 4 ];then	# stress style color scales
    if [ $use_simpson -eq 1 ];then
	#psscale  $pscl  -C$cmp  -Ba.5/:"$label":  -O -K  >> $ofile
	psscale  $pscl_simpson   -C$cmp  -L -O -K  >> $ofile
    else
	psscale  $pscl -E -C$cmp  -Ba0.25/:"$label":  -O -K  >> $ofile
    fi
fi
if [ $add_rlabel -eq 1 ];then
    psbasemap $preg $proj $ann \
	      -U"$cat_string, z < $dmax km, M > $min_mag, $kincx@+o@+ by $kincy@+o@+ $lname"+o0/-0.2 -O >> $ofile
else
    psbasemap $preg $proj $ann -O >> $ofile

fi
modifybb $ofile 0



/usr/bin/convert -density 150 -background white -flatten -trim +repage $ofile_start.ps $ofile_start.png

psconvert -Tf $ofile

rm $ofile 

